{"ast":null,"code":"var _jsxFileName = \"E:\\\\4thyear\\\\2nd sem\\\\Distributed system and cloud computing\\\\Project3\\\\movie_ds_FD\\\\src\\\\components\\\\card\\\\card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\nimport \"./card.css\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cards = _ref => {\n  _s();\n\n  let {\n    movie\n  } = _ref;\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 1500);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards\",\n      children: /*#__PURE__*/_jsxDEV(SkeletonTheme, {\n        color: \"#202020\",\n        highlightColor: \"#444\",\n        children: /*#__PURE__*/_jsxDEV(Skeleton, {\n          height: 300,\n          duration: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this) : movie && /*#__PURE__*/_jsxDEV(Link, {\n      to: `/movie/${movie.Id}`,\n      style: {\n        textDecoration: \"none\",\n        color: \"white\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"cards__img\",\n          src: `https://w9nbvf6p6e.execute-api.us-east-1.amazonaws.com/v1/get-all-movies${movie.PosterURL}`,\n          alt: movie.original_title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cards__overlay\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card__title\",\n            children: movie.MovieName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card__runtime\",\n            children: [movie.ReleaseDate, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"card__rating\",\n              children: [movie.Rate, /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-star\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card__description\",\n            children: movie.overview ? movie.overview.slice(0, 118) + \"...\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }, this)\n  }, void 0, false);\n};\n\n_s(Cards, \"Yt82d/dvZsn5nYh5sqDQjv+rJ38=\");\n\n_c = Cards;\nexport default Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["E:/4thyear/2nd sem/Distributed system and cloud computing/Project3/movie_ds_FD/src/components/card/card.js"],"names":["React","useEffect","useState","Skeleton","SkeletonTheme","Link","Cards","movie","isLoading","setIsLoading","setTimeout","Id","textDecoration","color","PosterURL","original_title","MovieName","ReleaseDate","Rate","overview","slice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,IAAmBC,aAAnB,QAAwC,wBAAxC;AACA,OAAO,YAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;;;;AAEA,MAAMC,KAAK,GAAG,QAAe;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACzB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,UAAU,CAAC,MAAM;AACbD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAFS,EAEP,IAFO,CAAV;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACI;AAAA,cACKD,SAAS,gBACN;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACI,QAAC,aAAD;AAAe,QAAA,KAAK,EAAC,SAArB;AAA+B,QAAA,cAAc,EAAC,MAA9C;AAAA,+BACI,QAAC,QAAD;AAAU,UAAA,MAAM,EAAE,GAAlB;AAAuB,UAAA,QAAQ,EAAE;AAAjC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADM,GAOND,KAAK,iBACD,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,UAASA,KAAK,CAACI,EAAG,EAA7B;AAAgC,MAAA,KAAK,EAAE;AAAEC,QAAAA,cAAc,EAAE,MAAlB;AAA0BC,QAAAA,KAAK,EAAE;AAAjC,OAAvC;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAA4B,UAAA,GAAG,EAAG,2EAA0EN,KAAK,CAACO,SAAU,EAA5H;AAA+H,UAAA,GAAG,EAAEP,KAAK,CAACQ;AAA1I;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,sBAA8BR,KAAK,CAACS;AAApC;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,uBACKT,KAAK,CAACU,WADX,eAEI;AAAM,cAAA,SAAS,EAAC,cAAhB;AAAA,yBACKV,KAAK,CAACW,IADX,eAEI;AAAG,gBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eASI;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAA,sBAAoCX,KAAK,CAACY,QAAN,GAAiBZ,KAAK,CAACY,QAAN,CAAeC,KAAf,CAAqB,CAArB,EAAwB,GAAxB,IAA+B,KAAhD,GAAwD;AAA5F;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AATZ,mBADJ;AA8BH,CAvCD;;GAAMd,K;;KAAAA,K;AAyCN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\nimport \"./card.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Cards = ({ movie }) => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setIsLoading(false);\r\n        }, 1500);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <div className=\"cards\">\r\n                    <SkeletonTheme color=\"#202020\" highlightColor=\"#444\">\r\n                        <Skeleton height={300} duration={2} />\r\n                    </SkeletonTheme>\r\n                </div>\r\n            ) : (\r\n                movie && (\r\n                    <Link to={`/movie/${movie.Id}`} style={{ textDecoration: \"none\", color: \"white\" }}>\r\n                        <div className=\"cards\">\r\n                            <img className=\"cards__img\" src={`https://w9nbvf6p6e.execute-api.us-east-1.amazonaws.com/v1/get-all-movies${movie.PosterURL}`} alt={movie.original_title} />\r\n                            <div className=\"cards__overlay\">\r\n                                <div className=\"card__title\">{movie.MovieName}</div>\r\n                                <div className=\"card__runtime\">\r\n                                    {movie.ReleaseDate}\r\n                                    <span className=\"card__rating\">\r\n                                        {movie.Rate}\r\n                                        <i className=\"fas fa-star\" />\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"card__description\">{movie.overview ? movie.overview.slice(0, 118) + \"...\" : \"\"}</div>\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                )\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Cards;\r\n"]},"metadata":{},"sourceType":"module"}