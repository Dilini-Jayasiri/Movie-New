{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import {\n//   Grid,\n//   TextField,\n//   Button,\n//   Link,\n//   Box,\n//   Card,\n//   CardContent,\n//   Typography,\n// } from \"@material-ui/core\";\n// import ButterToast, { Cinnamon } from \"butter-toast\";\n// import ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\n// import Swal from \"sweetalert2\";\n// function AddMovie() {\n//   const [fname, setFname] = useState(\"\");\n//   const [lname, setLname] = useState(\"\");\n//   const [phone, setPhone] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [cpassword, setCpassword] = useState(\"\");\n//   const inputRef = React.useRef();\n//   //   const setFnameForm = (e) => {\n//   //     setFname(e.target.value);\n//   //   };\n//   //   const setLnameForm = (e) => {\n//   //     setLname(e.target.value);\n//   //   };\n//   //   const setPhoneForm = (e) => {\n//   //     setPhone(e.target.value);\n//   //   };\n//   //   const setEmailForm = (e) => {\n//   //     setEmail(e.target.value);\n//   //   };\n//   //   const setPasswordForm = (e) => {\n//   //     setPassword(e.target.value);\n//   //   };\n//   //   const setCpasswordForm = (e) => {\n//   //     setCpassword(e.target.value);\n//   //   };\n//   const onClear = () => {\n//     setLname(\"\");\n//     setPhone(\"\");\n//     setEmail(\"\");\n//     setPassword(\"\");\n//     setCpassword(\"\");\n//     setFname(\"\");\n//     inputRef.current.focus();\n//   };\n//   const validation = () => {\n//     var Error = false;\n//     if (fname === \"\") {\n//       Swal.fire({\n//         icon: \"error\",\n//         title: \"First Name Required\",\n//       });\n//       Error = true;\n//     }\n//     if (lname === \"\") {\n//       Swal.fire({\n//         icon: \"error\",\n//         title: \"Last Name Required\",\n//       });\n//       Error = true;\n//     }\n//     if (phone === \"\") {\n//       Swal.fire({\n//         icon: \"error\",\n//         title: \"Phone Number Required\",\n//       });\n//       Error = true;\n//     }\n//     if (email === \"\") {\n//       Swal.fire({\n//         icon: \"error\",\n//         title: \"Email Required\",\n//       });\n//       Error = true;\n//     }\n//     if (password === \"\") {\n//       Swal.fire({\n//         icon: \"error\",\n//         title: \"Password Required\",\n//       });\n//       Error = true;\n//     }\n//     if (cpassword === \"\") {\n//       Swal.fire({\n//         icon: \"error\",\n//         title: \"Confirm Password Required\",\n//       });\n//       Error = true;\n//     } else if (password !== cpassword) {\n//       Swal.fire({\n//         icon: \"error\",\n//         title: \"Password Does Not Match\",\n//       });\n//       Error = true;\n//     }\n//     if (Error) {\n//       return false;\n//     }\n//     return true;\n//   };\n//   const SubmitForm = async (e) => {\n//     e.preventDefault();\n//     if (validation()) {\n//       const url = \"http://localhost:4000/User\";\n//       const data = JSON.stringify({\n//         fname: fname,\n//         lname: lname,\n//         phone: phone,\n//         email: email,\n//         password: password,\n//       });\n//       console.log(data);\n//       await axios\n//         .post(url, data, {\n//           headers: { \"Content-Type\": \"application/json\" },\n//         })\n//         .then(async (res) => {\n//           console.log(res);\n//           if (res.data.err !== \"connection\") {\n//             if (res.data.err === \"email\") {\n//               setEmail(\"\");\n//               Swal.fire({\n//                 icon: \"error\",\n//                 title: \"Email Already Exists\",\n//                 text: \"Enter New Email or Back to Login\",\n//               });\n//             } else if (res.data.err !== \"already\") {\n//               onClear();\n//               Swal.fire({\n//                 icon: \"success\",\n//                 title: \"Registration Successful\",\n//                 text: \"Back to Login Form and Enter Your Email and Password\",\n//               });\n//             } else {\n//               ButterToast.raise({\n//                 content: (\n//                   <Cinnamon.Crisp\n//                     title=\"Validation Error!\"\n//                     content=\"Already Exists!\"\n//                     scheme={Cinnamon.Crisp.SCHEME_RED}\n//                     icon={<ErrorOutlineIcon />}\n//                   />\n//                 ),\n//               });\n//             }\n//           } else {\n//             ButterToast.raise({\n//               content: (\n//                 <Cinnamon.Crisp\n//                   title=\"Validation Error!\"\n//                   content=\"Connection Error!\"\n//                   scheme={Cinnamon.Crisp.SCHEME_RED}\n//                   icon={<ErrorOutlineIcon />}\n//                 />\n//               ),\n//             });\n//           }\n//         });\n//     }\n//   };\n//   return (\n//     <div className=\"App\">\n//       <br />\n//       <br></br>\n//       <br></br>\n//       <br></br>\n//       {/* <Typography gutterBottom variant=\"h3\" align=\"center\">\n//         User Register Form\n//       </Typography> */}\n//       <Grid>\n//         <Card\n//           style={{\n//             maxWidth: 50 + \"%\",\n//             padding: \"20px 5px\",\n//             margin: \"0 auto\",\n//             backgroundColor: \"#f5f5f5\",\n//             boxShadow: \"0 10px 6px rgba(0, 0, 0, 0.16)\",\n//           }}\n//         >\n//           <CardContent>\n//             <Typography\n//               gutterBottom\n//               variant=\"h5\"\n//               style={{ fontFamily: \"Source Sans Pro\", fontSize: \"34px\" }}\n//             >\n//               Create a New Account\n//             </Typography>\n//             <br />\n//             <form autoComplete=\"off\" onSubmit={SubmitForm}>\n//               <Grid\n//                 container\n//                 spacing={2}\n//                 style={{ display: \"flex\", flexDirection: \"row\" }}\n//               >\n//                 <Grid item xs={6}>\n//                   <TextField\n//                     type=\"text\"\n//                     placeholder=\"First Name\"\n//                     inputRef={inputRef}\n//                     autoFocus\n//                     // label=\"First Name\"\n//                     variant=\"outlined\"\n//                     name=\"fname\"\n//                     value={fname}\n//                     // onChange={setFnameForm}\n//                     fullWidth\n//                   />\n//                 </Grid>\n//                 <Grid item xs={6}>\n//                   <TextField\n//                     type=\"text\"\n//                     placeholder=\"Last Name\"\n//                     // label=\"Last Name\"\n//                     variant=\"outlined\"\n//                     name=\"lname\"\n//                     value={lname}\n//                     // onChange={setLnameForm}\n//                     fullWidth\n//                   />\n//                 </Grid>\n//                 <Grid item xs={6}>\n//                   <TextField\n//                     type=\"number\"\n//                     placeholder=\"Phone Number\"\n//                     // label=\"Phone Number\"\n//                     variant=\"outlined\"\n//                     name=\"phone\"\n//                     value={phone}\n//                     // onChange={setPhoneForm}\n//                     fullWidth\n//                   />\n//                 </Grid>\n//                 <Grid item xs={6}>\n//                   <TextField\n//                     type=\"email\"\n//                     placeholder=\"Email\"\n//                     // label=\"Email\"\n//                     variant=\"outlined\"\n//                     name=\"email\"\n//                     value={email}\n//                     // onChange={setEmailForm}\n//                     fullWidth\n//                   />\n//                 </Grid>\n//                 <Grid item xs={12}>\n//                   <TextField\n//                     type=\"password\"\n//                     placeholder=\"Password\"\n//                     // label=\"Password\"\n//                     variant=\"outlined\"\n//                     name=\"password\"\n//                     value={password}\n//                     // onChange={setPasswordForm}\n//                     fullWidth\n//                   />\n//                 </Grid>\n//                 <Grid item xs={12}>\n//                   <TextField\n//                     type=\"password\"\n//                     placeholder=\"Confirm Password\"\n//                     // label=\"Confirm Password\"\n//                     variant=\"outlined\"\n//                     name=\"cpassword\"\n//                     value={cpassword}\n//                     // onChange={setCpasswordForm}\n//                     fullWidth\n//                   />\n//                 </Grid>\n//                 <Grid container spacing={3}>\n//                   <Grid item xs={6}>\n//                     <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n//                       Create the Account\n//                     </Button>\n//                   </Grid>\n//                   <Grid item xs={6}>\n//                     <Button\n//                       variant=\"contained\"\n//                       color=\"secondary\"\n//                       onClick={() => onClear()}\n//                     >\n//                       Clear Fields\n//                     </Button>\n//                   </Grid>\n//                 </Grid>\n//                 <Grid>\n//                   <Box\n//                     sx={{ display: \"flex\", justifyContent: \"center\", mt: 2 }}\n//                   >\n//                     <Typography variant=\"subtitle1\">\n//                       Already have an account?{\" \"}\n//                       <Link href=\"/login\" underline=\"always\">\n//                         Login\n//                       </Link>\n//                     </Typography>\n//                   </Box>\n//                 </Grid>\n//               </Grid>\n//             </form>\n//           </CardContent>\n//         </Card>\n//       </Grid>\n//       <br />\n//     </div>\n//   );\n// }\n// export default AddMovie;","map":{"version":3,"sources":["/Users/tharismac/Desktop/Year-04/Sem 02/Distributed Systems _ Cloud Computing/Project/movie_ds_FD/src/pages/addmovie/addmovie.js"],"names":[],"mappingssourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import {\n//   Grid,\n//   TextField,\n//   Button,\n//   Link,\n//   Box,\n//   Card,\n//   CardContent,\n//   Typography,\n// } from \"@material-ui/core\";\n// import ButterToast, { Cinnamon } from \"butter-toast\";\n// import ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\n// import Swal from \"sweetalert2\";\n\n// function AddMovie() {\n//   const [fname, setFname] = useState(\"\");\n//   const [lname, setLname] = useState(\"\");\n//   const [phone, setPhone] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [cpassword, setCpassword] = useState(\"\");\n//   const inputRef = React.useRef();\n\n//   //   const setFnameForm = (e) => {\n//   //     setFname(e.target.value);\n//   //   };\n\n//   //   const setLnameForm = (e) => {\n//   //     setLname(e.target.value);\n//   //   };\n\n//   //   const setPhoneForm = (e) => {\n//   //     setPhone(e.target.value);\n//   //   };\n\n//   //   const setEmailForm = (e) => {\n//   //     setEmail(e.target.value);\n//   //   };\n\n//   //   const setPasswordForm = (e) => {\n//   //     setPassword(e.target.value);\n//   //   };\n\n//   //   const setCpasswordForm = (e) => {\n//   //     setCpassword(e.target.value);\n//   //   };\n\n//   const onClear = () => {\n//     setLname(\"\");\n//     setPhone(\"\");\n//     setEmail(\"\");\n//     setPassword(\"\");\n//     setCpassword(\"\");\n//     setFname(\"\");\n//     inputRef.current.focus();\n//   };\n\n//   const validation = () => {\n//     var Error = false;\n\n//     if (fname === \"\") {\n//       Swal.fire({\n//         icon: \"error\",\n//         title: \"First Name Required\",\n//       });\n//       Error = true;\n//     }\n\n//     if (lname === \"\") {\n//       Swal.fire({\n//         icon: \"error\",\n//         title: \"Last Name Required\",\n//       });\n//       Error = true;\n//     }\n\n//     if (phone === \"\") {\n//       Swal.fire({\n//         icon: \"error\",\n//         title: \"Phone Number Required\",\n//       });\n//       Error = true;\n//     }\n\n//     if (email === \"\") {\n//       Swal.fire({\n//         icon: \"error\",\n//         title: \"Email Required\",\n//       });\n//       Error = true;\n//     }\n\n//     if (password === \"\") {\n//       Swal.fire({\n//         icon: \"error\",\n//         title: \"Password Required\",\n//       });\n//       Error = true;\n//     }\n\n//     if (cpassword === \"\") {\n//       Swal.fire({\n//         icon: \"error\",\n//         title: \"Confirm Password Required\",\n//       });\n//       Error = true;\n//     } else if (password !== cpassword) {\n//       Swal.fire({\n//         icon: \"error\",\n//         title: \"Password Does Not Match\",\n//       });\n//       Error = true;\n//     }\n\n//     if (Error) {\n//       return false;\n//     }\n\n//     return true;\n//   };\n\n//   const SubmitForm = async (e) => {\n//     e.preventDefault();\n\n//     if (validation()) {\n//       const url = \"http://localhost:4000/User\";\n//       const data = JSON.stringify({\n//         fname: fname,\n//         lname: lname,\n//         phone: phone,\n//         email: email,\n//         password: password,\n//       });\n//       console.log(data);\n//       await axios\n//         .post(url, data, {\n//           headers: { \"Content-Type\": \"application/json\" },\n//         })\n//         .then(async (res) => {\n//           console.log(res);\n//           if (res.data.err !== \"connection\") {\n//             if (res.data.err === \"email\") {\n//               setEmail(\"\");\n//               Swal.fire({\n//                 icon: \"error\",\n//                 title: \"Email Already Exists\",\n//                 text: \"Enter New Email or Back to Login\",\n//               });\n//             } else if (res.data.err !== \"already\") {\n//               onClear();\n//               Swal.fire({\n//                 icon: \"success\",\n//                 title: \"Registration Successful\",\n//                 text: \"Back to Login Form and Enter Your Email and Password\",\n//               });\n//             } else {\n//               ButterToast.raise({\n//                 content: (\n//                   <Cinnamon.Crisp\n//                     title=\"Validation Error!\"\n//                     content=\"Already Exists!\"\n//                     scheme={Cinnamon.Crisp.SCHEME_RED}\n//                     icon={<ErrorOutlineIcon />}\n//                   />\n//                 ),\n//               });\n//             }\n//           } else {\n//             ButterToast.raise({\n//               content: (\n//                 <Cinnamon.Crisp\n//                   title=\"Validation Error!\"\n//                   content=\"Connection Error!\"\n//                   scheme={Cinnamon.Crisp.SCHEME_RED}\n//                   icon={<ErrorOutlineIcon />}\n//                 />\n//               ),\n//             });\n//           }\n//         });\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <br />\n//       <br></br>\n//       <br></br>\n//       <br></br>\n//       {/* <Typography gutterBottom variant=\"h3\" align=\"center\">\n//         User Register Form\n//       </Typography> */}\n//       <Grid>\n//         <Card\n//           style={{\n//             maxWidth: 50 + \"%\",\n//             padding: \"20px 5px\",\n//             margin: \"0 auto\",\n//             backgroundColor: \"#f5f5f5\",\n//             boxShadow: \"0 10px 6px rgba(0, 0, 0, 0.16)\",\n//           }}\n//         >\n//           <CardContent>\n//             <Typography\n//               gutterBottom\n//               variant=\"h5\"\n//               style={{ fontFamily: \"Source Sans Pro\", fontSize: \"34px\" }}\n//             >\n//               Create a New Account\n//             </Typography>\n//             <br />\n//             <form autoComplete=\"off\" onSubmit={SubmitForm}>\n//               <Grid\n//                 container\n//                 spacing={2}\n//                 style={{ display: \"flex\", flexDirection: \"row\" }}\n//               >\n//                 <Grid item xs={6}>\n//                   <TextField\n//                     type=\"text\"\n//                     placeholder=\"First Name\"\n//                     inputRef={inputRef}\n//                     autoFocus\n//                     // label=\"First Name\"\n//                     variant=\"outlined\"\n//                     name=\"fname\"\n//                     value={fname}\n//                     // onChange={setFnameForm}\n//                     fullWidth\n//                   />\n//                 </Grid>\n//                 <Grid item xs={6}>\n//                   <TextField\n//                     type=\"text\"\n//                     placeholder=\"Last Name\"\n//                     // label=\"Last Name\"\n//                     variant=\"outlined\"\n//                     name=\"lname\"\n//                     value={lname}\n//                     // onChange={setLnameForm}\n//                     fullWidth\n//                   />\n//                 </Grid>\n//                 <Grid item xs={6}>\n//                   <TextField\n//                     type=\"number\"\n//                     placeholder=\"Phone Number\"\n//                     // label=\"Phone Number\"\n//                     variant=\"outlined\"\n//                     name=\"phone\"\n//                     value={phone}\n//                     // onChange={setPhoneForm}\n//                     fullWidth\n//                   />\n//                 </Grid>\n//                 <Grid item xs={6}>\n//                   <TextField\n//                     type=\"email\"\n//                     placeholder=\"Email\"\n//                     // label=\"Email\"\n//                     variant=\"outlined\"\n//                     name=\"email\"\n//                     value={email}\n//                     // onChange={setEmailForm}\n//                     fullWidth\n//                   />\n//                 </Grid>\n\n//                 <Grid item xs={12}>\n//                   <TextField\n//                     type=\"password\"\n//                     placeholder=\"Password\"\n//                     // label=\"Password\"\n//                     variant=\"outlined\"\n//                     name=\"password\"\n//                     value={password}\n//                     // onChange={setPasswordForm}\n//                     fullWidth\n//                   />\n//                 </Grid>\n//                 <Grid item xs={12}>\n//                   <TextField\n//                     type=\"password\"\n//                     placeholder=\"Confirm Password\"\n//                     // label=\"Confirm Password\"\n//                     variant=\"outlined\"\n//                     name=\"cpassword\"\n//                     value={cpassword}\n//                     // onChange={setCpasswordForm}\n//                     fullWidth\n//                   />\n//                 </Grid>\n//                 <Grid container spacing={3}>\n//                   <Grid item xs={6}>\n//                     <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n//                       Create the Account\n//                     </Button>\n//                   </Grid>\n//                   <Grid item xs={6}>\n//                     <Button\n//                       variant=\"contained\"\n//                       color=\"secondary\"\n//                       onClick={() => onClear()}\n//                     >\n//                       Clear Fields\n//                     </Button>\n//                   </Grid>\n//                 </Grid>\n//                 <Grid>\n//                   <Box\n//                     sx={{ display: \"flex\", justifyContent: \"center\", mt: 2 }}\n//                   >\n//                     <Typography variant=\"subtitle1\">\n//                       Already have an account?{\" \"}\n//                       <Link href=\"/login\" underline=\"always\">\n//                         Login\n//                       </Link>\n//                     </Typography>\n//                   </Box>\n//                 </Grid>\n//               </Grid>\n//             </form>\n//           </CardContent>\n//         </Card>\n//       </Grid>\n//       <br />\n//     </div>\n//   );\n// }\n\n// export default AddMovie;\n"]},"metadata":{},"sourceType":"module"}