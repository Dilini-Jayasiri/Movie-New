{"ast":null,"code":"var _jsxFileName = \"E:\\\\4thyear\\\\2nd sem\\\\Distributed system and cloud computing\\\\Project3\\\\movie_ds_FD\\\\src\\\\pages\\\\addmovie\\\\addmovie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Grid, TextField, Button, Card, CardContent, Typography, MenuItem // Add MenuItem for dropdown\n} from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddMovie() {\n  _s();\n\n  const [movieName, setMovieName] = useState(\"\");\n  const [ratings, setRatings] = useState(\"\");\n  const [votes, setVotes] = useState(\"\");\n  const [minutes, setMinutes] = useState(\"\");\n  const [releasedate, setReleasedate] = useState(\"\");\n  const [synopsis, setSynopsis] = useState(\"\");\n  const [genre, setGenre] = useState(\"\"); // Add genre state\n\n  const [moviePoster, setMoviePoster] = useState(\"\"); // Add moviePoster state\n\n  const [movieBackdrop, setMovieBackdrop] = useState(\"\"); // Add movieBackdrop state\n\n  const [tagline, setTagline] = useState(\"\"); // Add tagline state\n\n  const inputRef = React.useRef();\n\n  const onClear = () => {\n    setRatings(\"\");\n    setVotes(\"\");\n    setMinutes(\"\");\n    setReleasedate(\"\");\n    setMovieName(\"\");\n    setSynopsis(\"\");\n    setGenre(\"\");\n    setMoviePoster(\"\");\n    setMovieBackdrop(\"\");\n    setTagline(\"\");\n    inputRef.current.focus();\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newMovie = {\n      movieName,\n      ratings,\n      votes,\n      minutes,\n      releasedate,\n      synopsis,\n      genre,\n      moviePoster,\n      movieBackdrop,\n      tagline\n    };\n    console.log(\"Submitting form with data:\", newMovie);\n    axios.post(\"https://w9nbvf6p6e.execute-api.us-east-1.amazonaws.com/v1/create-movie\", newMovie).then(response => {\n      console.log(\"Movie created:\", response.data); // Optionally, you can reset the form fields after successful submission\n\n      onClear();\n    }).catch(error => {\n      console.error(\"Error creating movie:\", error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          maxWidth: \"50%\",\n          padding: \"20px 5px\",\n          margin: \"0 auto\",\n          backgroundColor: \"#f5f5f5\",\n          boxShadow: \"0 10px 6px rgba(0, 0, 0, 0.16)\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h5\",\n            style: {\n              fontFamily: \"Source Sans Pro\",\n              fontSize: \"34px\"\n            },\n            children: \"Add a New Movie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            autoComplete: \"off\",\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"text\",\n                  placeholder: \"Movie Name\",\n                  inputRef: inputRef,\n                  autoFocus: true,\n                  variant: \"outlined\",\n                  name: \"fname\",\n                  value: movieName,\n                  onChange: e => setMovieName(e.target.value),\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"text\",\n                  placeholder: \"Tagline\",\n                  variant: \"outlined\",\n                  name: \"tagline\",\n                  value: tagline,\n                  onChange: e => setTagline(e.target.value),\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"text\",\n                  placeholder: \"Ratings\",\n                  variant: \"outlined\",\n                  name: \"ratings\",\n                  value: ratings,\n                  onChange: e => setRatings(e.target.value),\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"text\",\n                  placeholder: \"Number of Votes\",\n                  variant: \"outlined\",\n                  name: \"phone\",\n                  value: votes,\n                  onChange: e => setVotes(e.target.value),\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"email\",\n                  placeholder: \"Minutes\",\n                  variant: \"outlined\",\n                  name: \"email\",\n                  value: minutes,\n                  onChange: e => setMinutes(e.target.value),\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"text\",\n                  placeholder: \"Release Date\",\n                  variant: \"outlined\",\n                  name: \"Release Date\",\n                  value: releasedate,\n                  onChange: e => setReleasedate(e.target.value),\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"text\",\n                  placeholder: \"Synopsis\",\n                  variant: \"outlined\",\n                  name: \"Synopsis\",\n                  value: synopsis,\n                  onChange: e => setSynopsis(e.target.value),\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  select: true,\n                  label: \"Genre\",\n                  variant: \"outlined\",\n                  name: \"genre\",\n                  value: genre,\n                  onChange: e => setGenre(e.target.value),\n                  fullWidth: true,\n                  children: Object.keys(genreList).map(key => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: key,\n                    children: genreList[key]\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"text\",\n                  placeholder: \"Movie Poster URL /imgurl.jpg \",\n                  variant: \"outlined\",\n                  name: \"moviePoster\",\n                  value: moviePoster,\n                  onChange: e => setMoviePoster(e.target.value),\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"text\",\n                  placeholder: \"Movie Backdrop URL : /imgurl.jpg \",\n                  variant: \"outlined\",\n                  name: \"movieBackdrop\",\n                  value: movieBackdrop,\n                  onChange: e => setMovieBackdrop(e.target.value),\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 1,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 7,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    children: \"Submit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 4,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    onClick: () => onClear(),\n                    children: \"Clear Fields\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddMovie, \"HTokdybXeuJX8BwKNIYMPt/hZs8=\");\n\n_c = AddMovie;\nconst genreList = {\n  \"Action Genre\": \"Action Genre\",\n  \"Animation Genre\": \"Animation Genre\",\n  \"Comedy Genre\": \"Comedy Genre\",\n  \"Crime Genre\": \"Crime Genre\",\n  \"Drama Genre\": \"Drama Genre\",\n  \"Experimental Genre\": \"Experimental Genre\",\n  \"Fantasy Genre\": \"Fantasy Genre\",\n  \"Historical Genre\": \"Historical Genre\",\n  \"Horror Genre\": \"Horror Genre\",\n  \"Romance Genre\": \"Romance Genre\",\n  \"Science Fiction Genre\": \"Science Fiction Genre\",\n  \"Thriller Genre\": \"Thriller Genre\",\n  \"Western Genre\": \"Western Genre\",\n  \"Other Genres\": \"Other Genres\"\n};\nexport default AddMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddMovie\");","map":{"version":3,"sources":["E:/4thyear/2nd sem/Distributed system and cloud computing/Project3/movie_ds_FD/src/pages/addmovie/addmovie.js"],"names":["React","useState","axios","Grid","TextField","Button","Card","CardContent","Typography","MenuItem","AddMovie","movieName","setMovieName","ratings","setRatings","votes","setVotes","minutes","setMinutes","releasedate","setReleasedate","synopsis","setSynopsis","genre","setGenre","moviePoster","setMoviePoster","movieBackdrop","setMovieBackdrop","tagline","setTagline","inputRef","useRef","onClear","current","focus","handleSubmit","e","preventDefault","newMovie","console","log","post","then","response","data","catch","error","maxWidth","padding","margin","backgroundColor","boxShadow","fontFamily","fontSize","target","value","Object","keys","genreList","map","key"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  MenuItem, // Add MenuItem for dropdown\r\n} from \"@material-ui/core\";\r\n\r\nfunction AddMovie() {\r\n  const [movieName, setMovieName] = useState(\"\");\r\n  const [ratings, setRatings] = useState(\"\");\r\n  const [votes, setVotes] = useState(\"\");\r\n  const [minutes, setMinutes] = useState(\"\");\r\n  const [releasedate, setReleasedate] = useState(\"\");\r\n  const [synopsis, setSynopsis] = useState(\"\");\r\n  const [genre, setGenre] = useState(\"\"); // Add genre state\r\n  const [moviePoster, setMoviePoster] = useState(\"\"); // Add moviePoster state\r\n  const [movieBackdrop, setMovieBackdrop] = useState(\"\"); // Add movieBackdrop state\r\n  const [tagline, setTagline] = useState(\"\"); // Add tagline state\r\n  const inputRef = React.useRef();\r\n\r\n  const onClear = () => {\r\n    setRatings(\"\");\r\n    setVotes(\"\");\r\n    setMinutes(\"\");\r\n    setReleasedate(\"\");\r\n    setMovieName(\"\");\r\n    setSynopsis(\"\");\r\n    setGenre(\"\");\r\n    setMoviePoster(\"\");\r\n    setMovieBackdrop(\"\");\r\n    setTagline(\"\");\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newMovie = {\r\n      movieName,\r\n      ratings,\r\n      votes,\r\n      minutes,\r\n      releasedate,\r\n      synopsis,\r\n      genre,\r\n      moviePoster,\r\n      movieBackdrop,\r\n      tagline,\r\n    };\r\n    console.log(\"Submitting form with data:\", newMovie);\r\n    axios\r\n      .post(\"https://w9nbvf6p6e.execute-api.us-east-1.amazonaws.com/v1/create-movie\", newMovie)\r\n      .then((response) => {\r\n        console.log(\"Movie created:\", response.data);\r\n        // Optionally, you can reset the form fields after successful submission\r\n        onClear();\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error creating movie:\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <Grid>\r\n        <Card\r\n          style={{\r\n            maxWidth: \"50%\",\r\n            padding: \"20px 5px\",\r\n            margin: \"0 auto\",\r\n            backgroundColor: \"#f5f5f5\",\r\n            boxShadow: \"0 10px 6px rgba(0, 0, 0, 0.16)\",\r\n          }}\r\n        >\r\n          <CardContent>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"h5\"\r\n              style={{ fontFamily: \"Source Sans Pro\", fontSize: \"34px\" }}\r\n            >\r\n              Add a New Movie\r\n            </Typography>\r\n            <br />\r\n            <form autoComplete=\"off\" onSubmit={handleSubmit}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    type=\"text\"\r\n                    placeholder=\"Movie Name\"\r\n                    inputRef={inputRef}\r\n                    autoFocus\r\n                    variant=\"outlined\"\r\n                    name=\"fname\"\r\n                    value={movieName}\r\n                    onChange={(e) => setMovieName(e.target.value)}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  {/* Tagline */}\r\n                  <TextField\r\n                    type=\"text\"\r\n                    placeholder=\"Tagline\"\r\n                    variant=\"outlined\"\r\n                    name=\"tagline\"\r\n                    value={tagline}\r\n                    onChange={(e) => setTagline(e.target.value)}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    type=\"text\"\r\n                    placeholder=\"Ratings\"\r\n                    variant=\"outlined\"\r\n                    name=\"ratings\"\r\n                    value={ratings}\r\n                    onChange={(e) => setRatings(e.target.value)}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    type=\"text\"\r\n                    placeholder=\"Number of Votes\"\r\n                    variant=\"outlined\"\r\n                    name=\"phone\"\r\n                    value={votes}\r\n                    onChange={(e) => setVotes(e.target.value)}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    type=\"email\"\r\n                    placeholder=\"Minutes\"\r\n                    variant=\"outlined\"\r\n                    name=\"email\"\r\n                    value={minutes}\r\n                    onChange={(e) => setMinutes(e.target.value)}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    type=\"text\"\r\n                    placeholder=\"Release Date\"\r\n                    variant=\"outlined\"\r\n                    name=\"Release Date\"\r\n                    value={releasedate}\r\n                    onChange={(e) => setReleasedate(e.target.value)}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    type=\"text\"\r\n                    placeholder=\"Synopsis\"\r\n                    variant=\"outlined\"\r\n                    name=\"Synopsis\"\r\n                    value={synopsis}\r\n                    onChange={(e) => setSynopsis(e.target.value)}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  {/* Genre Dropdown */}\r\n                  <TextField\r\n                    select\r\n                    label=\"Genre\"\r\n                    variant=\"outlined\"\r\n                    name=\"genre\"\r\n                    value={genre}\r\n                    onChange={(e) => setGenre(e.target.value)}\r\n                    fullWidth\r\n                  >\r\n                    {Object.keys(genreList).map((key) => (\r\n                      <MenuItem key={key} value={key}>\r\n                        {genreList[key]}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </TextField>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  {/* Movie Poster URL */}\r\n                  <TextField\r\n                    type=\"text\"\r\n                    placeholder=\"Movie Poster URL /imgurl.jpg \"\r\n                    variant=\"outlined\"\r\n                    name=\"moviePoster\"\r\n                    value={moviePoster}\r\n                    onChange={(e) => setMoviePoster(e.target.value)}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  {/* Movie Backdrop URL */}\r\n                  <TextField\r\n                    type=\"text\"\r\n                    placeholder=\"Movie Backdrop URL : /imgurl.jpg \"\r\n                    variant=\"outlined\"\r\n                    name=\"movieBackdrop\"\r\n                    value={movieBackdrop}\r\n                    onChange={(e) => setMovieBackdrop(e.target.value)}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={7}>\r\n                    <Button variant=\"contained\" color=\"primary\">\r\n                      Submit\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      onClick={() => onClear()}\r\n                    >\r\n                      Clear Fields\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid></Grid>\r\n              </Grid>\r\n            </form>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst genreList = {\r\n  \"Action Genre\": \"Action Genre\",\r\n  \"Animation Genre\": \"Animation Genre\",\r\n  \"Comedy Genre\": \"Comedy Genre\",\r\n  \"Crime Genre\": \"Crime Genre\",\r\n  \"Drama Genre\": \"Drama Genre\",\r\n  \"Experimental Genre\": \"Experimental Genre\",\r\n  \"Fantasy Genre\": \"Fantasy Genre\",\r\n  \"Historical Genre\": \"Historical Genre\",\r\n  \"Horror Genre\": \"Horror Genre\",\r\n  \"Romance Genre\": \"Romance Genre\",\r\n  \"Science Fiction Genre\": \"Science Fiction Genre\",\r\n  \"Thriller Genre\": \"Thriller Genre\",\r\n  \"Western Genre\": \"Western Genre\",\r\n  \"Other Genres\": \"Other Genres\",\r\n};\r\n\r\nexport default AddMovie;\r\n"]},"metadata":{},"sourceType":"module"}