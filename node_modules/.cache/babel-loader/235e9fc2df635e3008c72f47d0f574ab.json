{"ast":null,"code":"var _jsxFileName = \"/Users/tharismac/Desktop/Year-04/Sem 02/Distributed Systems _ Cloud Computing/Project/movie_ds_FD/src/pages/addmovie/addmovie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Grid, TextField, Button, Card, CardContent, Typography, MenuItem // Add MenuItem for dropdown\n} from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddMovie() {\n  _s();\n\n  const [movieName, setMovieName] = useState(\"\");\n  const [ratings, setRatings] = useState(\"\");\n  const [votes, setVotes] = useState(\"\");\n  const [minutes, setMinutes] = useState(\"\");\n  const [releasedate, setReleasedate] = useState(\"\");\n  const [synopsis, setSynopsis] = useState(\"\");\n  const [genre, setGenre] = useState(\"\"); // Add genre state\n\n  const [moviePoster, setMoviePoster] = useState(\"\"); // Add moviePoster state\n\n  const [movieBackdrop, setMovieBackdrop] = useState(\"\"); // Add movieBackdrop state\n\n  const [tagline, setTagline] = useState(\"\"); // Add tagline state\n\n  const inputRef = React.useRef();\n\n  const onClear = () => {\n    setRatings(\"\");\n    setVotes(\"\");\n    setOverview(\"\");\n    setMinutes(\"\");\n    setReleasedate(\"\");\n    setMovieName(\"\");\n    setSynopsis(\"\");\n    setGenre(\"\");\n    setMoviePoster(\"\");\n    setMovieBackdrop(\"\");\n    setTagline(\"\");\n    inputRef.current.focus();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          maxWidth: \"50%\",\n          padding: \"20px 5px\",\n          margin: \"0 auto\",\n          backgroundColor: \"#f5f5f5\",\n          boxShadow: \"0 10px 6px rgba(0, 0, 0, 0.16)\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h5\",\n            style: {\n              fontFamily: \"Source Sans Pro\",\n              fontSize: \"34px\"\n            },\n            children: \"Add a New Movie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            autoComplete: \"off\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"text\",\n                  placeholder: \"Movie Name\",\n                  inputRef: inputRef,\n                  autoFocus: true,\n                  variant: \"outlined\",\n                  name: \"fname\",\n                  value: movieName,\n                  onChange: e => setMovieName(e.target.value),\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"text\",\n                  placeholder: \"Overview\",\n                  inputRef: inputRef,\n                  variant: \"outlined\",\n                  name: \"fname\",\n                  value: overview,\n                  onChange: e => setOverview(e.target.value),\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"text\",\n                  placeholder: \"Ratings\",\n                  variant: \"outlined\",\n                  name: \"lname\",\n                  value: ratings,\n                  onChange: e => setRatings(e.target.value),\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"number\",\n                  placeholder: \"Number of Votes\",\n                  variant: \"outlined\",\n                  name: \"phone\",\n                  value: votes,\n                  onChange: e => setVotes(e.target.value),\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"email\",\n                  placeholder: \"Minutes\",\n                  variant: \"outlined\",\n                  name: \"email\",\n                  value: minutes,\n                  onChange: e => setMinutes(e.target.value),\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"password\",\n                  placeholder: \"Release Date\",\n                  variant: \"outlined\",\n                  name: \"password\",\n                  value: releasedate,\n                  onChange: e => setReleasedate(e.target.value),\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"password\",\n                  placeholder: \"setSynopsis\",\n                  variant: \"outlined\",\n                  name: \"password\",\n                  value: synopsis,\n                  onChange: e => setSynopsis(e.target.value),\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  select: true,\n                  label: \"Genre\",\n                  variant: \"outlined\",\n                  name: \"genre\",\n                  value: genre,\n                  onChange: e => setGenre(e.target.value),\n                  fullWidth: true,\n                  children: Object.keys(genreList).map(key => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: key,\n                    children: genreList[key]\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"text\",\n                  placeholder: \"Movie Poster URL\",\n                  variant: \"outlined\",\n                  name: \"moviePoster\",\n                  value: moviePoster,\n                  onChange: e => setMoviePoster(e.target.value),\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"text\",\n                  placeholder: \"Movie Backdrop URL\",\n                  variant: \"outlined\",\n                  name: \"movieBackdrop\",\n                  value: movieBackdrop,\n                  onChange: e => setMovieBackdrop(e.target.value),\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"text\",\n                  placeholder: \"Tagline\",\n                  variant: \"outlined\",\n                  name: \"tagline\",\n                  value: tagline,\n                  onChange: e => setTagline(e.target.value),\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 1,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 7,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    children: \"Submit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 4,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    onClick: () => onClear(),\n                    children: \"Clear Fields\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddMovie, \"HTokdybXeuJX8BwKNIYMPt/hZs8=\");\n\n_c = AddMovie;\nconst genreList = {\n  \"Action Genre\": \"Action Genre\",\n  \"Animation Genre\": \"Animation Genre\",\n  \"Comedy Genre\": \"Comedy Genre\",\n  \"Crime Genre\": \"Crime Genre\",\n  \"Drama Genre\": \"Drama Genre\",\n  \"Experimental Genre\": \"Experimental Genre\",\n  \"Fantasy Genre\": \"Fantasy Genre\",\n  \"Historical Genre\": \"Historical Genre\",\n  \"Horror Genre\": \"Horror Genre\",\n  \"Romance Genre\": \"Romance Genre\",\n  \"Science Fiction Genre\": \"Science Fiction Genre\",\n  \"Thriller Genre\": \"Thriller Genre\",\n  \"Western Genre\": \"Western Genre\",\n  \"Other Genres\": \"Other Genres\"\n};\nexport default AddMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddMovie\");","map":{"version":3,"sources":["/Users/tharismac/Desktop/Year-04/Sem 02/Distributed Systems _ Cloud Computing/Project/movie_ds_FD/src/pages/addmovie/addmovie.js"],"names":["React","useState","Grid","TextField","Button","Card","CardContent","Typography","MenuItem","AddMovie","movieName","setMovieName","ratings","setRatings","votes","setVotes","minutes","setMinutes","releasedate","setReleasedate","synopsis","setSynopsis","genre","setGenre","moviePoster","setMoviePoster","movieBackdrop","setMovieBackdrop","tagline","setTagline","inputRef","useRef","onClear","setOverview","current","focus","maxWidth","padding","margin","backgroundColor","boxShadow","fontFamily","fontSize","e","target","value","overview","Object","keys","genreList","map","key"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Grid,\n  TextField,\n  Button,\n  Card,\n  CardContent,\n  Typography,\n  MenuItem, // Add MenuItem for dropdown\n} from \"@material-ui/core\";\n\nfunction AddMovie() {\n  const [movieName, setMovieName] = useState(\"\");\n  const [ratings, setRatings] = useState(\"\");\n  const [votes, setVotes] = useState(\"\");\n  const [minutes, setMinutes] = useState(\"\");\n  const [releasedate, setReleasedate] = useState(\"\");\n  const [synopsis, setSynopsis] = useState(\"\");\n  const [genre, setGenre] = useState(\"\"); // Add genre state\n  const [moviePoster, setMoviePoster] = useState(\"\"); // Add moviePoster state\n  const [movieBackdrop, setMovieBackdrop] = useState(\"\"); // Add movieBackdrop state\n  const [tagline, setTagline] = useState(\"\"); // Add tagline state\n  const inputRef = React.useRef();\n\n  const onClear = () => {\n    setRatings(\"\");\n    setVotes(\"\");\n    setOverview(\"\");\n    setMinutes(\"\");\n    setReleasedate(\"\");\n    setMovieName(\"\");\n    setSynopsis(\"\");\n    setGenre(\"\");\n    setMoviePoster(\"\");\n    setMovieBackdrop(\"\");\n    setTagline(\"\");\n    inputRef.current.focus();\n  };\n\n  return (\n    <div className=\"App\">\n      <br />\n      <br />\n      <br />\n      <br />\n      <Grid>\n        <Card\n          style={{\n            maxWidth: \"50%\",\n            padding: \"20px 5px\",\n            margin: \"0 auto\",\n            backgroundColor: \"#f5f5f5\",\n            boxShadow: \"0 10px 6px rgba(0, 0, 0, 0.16)\",\n          }}\n        >\n          <CardContent>\n            <Typography\n              gutterBottom\n              variant=\"h5\"\n              style={{ fontFamily: \"Source Sans Pro\", fontSize: \"34px\" }}\n            >\n              Add a New Movie\n            </Typography>\n            <br />\n            <form autoComplete=\"off\">\n              <Grid container spacing={2}>\n                <Grid item xs={6}>\n                  <TextField\n                    type=\"text\"\n                    placeholder=\"Movie Name\"\n                    inputRef={inputRef}\n                    autoFocus\n                    variant=\"outlined\"\n                    name=\"fname\"\n                    value={movieName}\n                    onChange={(e) => setMovieName(e.target.value)}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    type=\"text\"\n                    placeholder=\"Overview\"\n                    inputRef={inputRef}\n                    variant=\"outlined\"\n                    name=\"fname\"\n                    value={overview}\n                    onChange={(e) => setOverview(e.target.value)}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    type=\"text\"\n                    placeholder=\"Ratings\"\n                    variant=\"outlined\"\n                    name=\"lname\"\n                    value={ratings}\n                    onChange={(e) => setRatings(e.target.value)}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    type=\"number\"\n                    placeholder=\"Number of Votes\"\n                    variant=\"outlined\"\n                    name=\"phone\"\n                    value={votes}\n                    onChange={(e) => setVotes(e.target.value)}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    type=\"email\"\n                    placeholder=\"Minutes\"\n                    variant=\"outlined\"\n                    name=\"email\"\n                    value={minutes}\n                    onChange={(e) => setMinutes(e.target.value)}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    type=\"password\"\n                    placeholder=\"Release Date\"\n                    variant=\"outlined\"\n                    name=\"password\"\n                    value={releasedate}\n                    onChange={(e) => setReleasedate(e.target.value)}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    type=\"password\"\n                    placeholder=\"setSynopsis\"\n                    variant=\"outlined\"\n                    name=\"password\"\n                    value={synopsis}\n                    onChange={(e) => setSynopsis(e.target.value)}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  {/* Genre Dropdown */}\n                  <TextField\n                    select\n                    label=\"Genre\"\n                    variant=\"outlined\"\n                    name=\"genre\"\n                    value={genre}\n                    onChange={(e) => setGenre(e.target.value)}\n                    fullWidth\n                  >\n                    {Object.keys(genreList).map((key) => (\n                      <MenuItem key={key} value={key}>\n                        {genreList[key]}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                </Grid>\n                <Grid item xs={6}>\n                  {/* Movie Poster URL */}\n                  <TextField\n                    type=\"text\"\n                    placeholder=\"Movie Poster URL\"\n                    variant=\"outlined\"\n                    name=\"moviePoster\"\n                    value={moviePoster}\n                    onChange={(e) => setMoviePoster(e.target.value)}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  {/* Movie Backdrop URL */}\n                  <TextField\n                    type=\"text\"\n                    placeholder=\"Movie Backdrop URL\"\n                    variant=\"outlined\"\n                    name=\"movieBackdrop\"\n                    value={movieBackdrop}\n                    onChange={(e) => setMovieBackdrop(e.target.value)}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  {/* Tagline */}\n                  <TextField\n                    type=\"text\"\n                    placeholder=\"Tagline\"\n                    variant=\"outlined\"\n                    name=\"tagline\"\n                    value={tagline}\n                    onChange={(e) => setTagline(e.target.value)}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid container spacing={1}>\n                  <Grid item xs={7}>\n                    <Button variant=\"contained\" color=\"primary\">\n                      Submit\n                    </Button>\n                  </Grid>\n                  <Grid item xs={4}>\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={() => onClear()}\n                    >\n                      Clear Fields\n                    </Button>\n                  </Grid>\n                </Grid>\n                <Grid></Grid>\n              </Grid>\n            </form>\n          </CardContent>\n        </Card>\n      </Grid>\n      <br />\n    </div>\n  );\n}\n\nconst genreList = {\n  \"Action Genre\": \"Action Genre\",\n  \"Animation Genre\": \"Animation Genre\",\n  \"Comedy Genre\": \"Comedy Genre\",\n  \"Crime Genre\": \"Crime Genre\",\n  \"Drama Genre\": \"Drama Genre\",\n  \"Experimental Genre\": \"Experimental Genre\",\n  \"Fantasy Genre\": \"Fantasy Genre\",\n  \"Historical Genre\": \"Historical Genre\",\n  \"Horror Genre\": \"Horror Genre\",\n  \"Romance Genre\": \"Romance Genre\",\n  \"Science Fiction Genre\": \"Science Fiction Genre\",\n  \"Thriller Genre\": \"Thriller Genre\",\n  \"Western Genre\": \"Western Genre\",\n  \"Other Genres\": \"Other Genres\",\n};\n\nexport default AddMovie;\n"]},"metadata":{},"sourceType":"module"}